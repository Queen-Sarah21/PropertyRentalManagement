@model PropertyRentalManagement.Models.Schedule

@{
    ViewBag.Title = "Create Schedule";
}

<h2 class="text-center text-primary my-4">Create Schedule</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Schedule Details</h4>
            </div>
            <div class="card-body">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.ManagerId, "Manager", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownList("ManagerId", null, htmlAttributes: new { @class = "form-control", @placeholder = "Select Manager" })
                        @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.ScheduleDate, "Schedule Date", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.EditorFor(model => model.ScheduleDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.ScheduleDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.StartTime, "Start Time", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.StartTime, new SelectList(GetTimeSlots(), "Value", "Text"), "Select Time", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row mb-3">
                    @Html.LabelFor(model => model.EndTime, "End Time", htmlAttributes: new { @class = "col-sm-3 col-form-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(model => model.EndTime, new SelectList(GetTimeSlots(), "Value", "Text"), "Select Time", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group text-center">
                    <input type="submit" value="Create Schedule" class="btn btn-primary btn-lg px-5" />
                </div>
            </div>
        </div>
    </div>
}

<div class="mt-4 text-center">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $(".datepicker").datepicker({
                dateFormat: 'yy-mm-dd',
                minDate: 0
            });
        });
    </script>
}

@functions {
    public IEnumerable<SelectListItem> GetTimeSlots()
    {
        var timeSlots = new List<SelectListItem>();
        var startTime = new DateTime(2024, 1, 1, 9, 0, 0);
        var endTime = new DateTime(2024, 1, 1, 17, 0, 0);

        while (startTime <= endTime)
        {
            timeSlots.Add(new SelectListItem
            {
                Text = startTime.ToString("hh:mm tt"),
                Value = startTime.ToString("HH:mm")
            });
            startTime = startTime.AddMinutes(30);
        }

        return timeSlots;
    }
}
